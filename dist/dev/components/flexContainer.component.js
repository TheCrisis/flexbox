var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('angular2/core');
var common_1 = require('angular2/common');
var FlexContainer_1 = require('../services/FlexContainer');
var flexItem_component_1 = require('./flexItem.component');
var SidebarCmps_1 = require('./SidebarCmps');
var CSSDefaults_1 = require('../services/CSSDefaults');
var pipes_1 = require('../utils/pipes');
var FlexContainerCmp = (function () {
    function FlexContainerCmp(flexContainer) {
        this.flexContainer = flexContainer;
    }
    FlexContainerCmp = __decorate([
        core_1.Component({
            selector: 'flex-container',
            styles: ["\n\n  "],
            template: "\n\t\t\t<div id=\"flex-container\"  [ngStyle]=\"{\n\t\t    'width': flexContainer.styles.width,\n\t\t    'height': flexContainer.styles.height,\n\t      'display': flexContainer.styles.display,\n\t\t\t\t'flex-wrap': flexContainer.styles.flexWrap,\n\t\t\t\t'flex-direction': flexContainer.styles.flexDirection,\n\t\t\t\t'justify-content': flexContainer.styles.justifyContent,\n\t\t\t\t'align-items': flexContainer.styles.alignItems,\n\t\t\t\t'align-content': flexContainer.styles.alignContent\n\t    }\" class=\"flex-container\">\n\t\t\t\t<div class=\"container-wide-actions\">\n\t\t\t\t\t<span (click)='flexContainer.removeAll()' title='Remove all flex items'><i class=\"fa fa-trash\"></i></span>\n\t\t\t\t\t<span (click)='flexContainer.resizeContainer()' title='Resize flex container'><i class=\"fa fa-exchange\"></i></span>\n\t\t\t\t\t<span (click)='flexContainer.showCode()' title='View CSS'><i class=\"fa fa-code\"></i></span>\n\t\t\t\t</div>\n\t\t\t\t<flex-item class=\"flex-item\" *ngFor=\"#item of flexContainer.list\" [item]=\"item\" [ngStyle]=\"{\n\t\t    'width': item.styles.width,\n\t\t    'height': item.styles.height,\n\t\t\t\t'flex-grow': item.styles.flexGrow,\n\t\t\t\t'flex-shrink': item.styles.flexShrink,\n\t\t\t\t'flex-order': item.styles.flexOrder,\n\t\t\t\t'flex-basis': item.styles.flexBasis,\n\t\t\t\t'align-self': item.styles.alignSelf\n\t    }\"></flex-item>\n\t\t\t</div>\n    <aside class=\"sidebar\">\n\t\t\t<tour-panel id=\"message-box\" class=\"message-box\"></tour-panel>\n\t\t\t<admin-panel class=\"control-panel\"></admin-panel>\n\t\t</aside>\n\t\t<div class='modal'>\n\t\t\t<code-panel class=\"code-box\" list=\"flexContainer.list\"></code-panel>\n\t\t</div>\n\t",
            directives: [common_1.NgFor, flexItem_component_1.FlexItemCmp, common_1.NgStyle,
                SidebarCmps_1.TourPanelCmp, SidebarCmps_1.AdminPanelCmp, SidebarCmps_1.CodePanelCmp],
            providers: [CSSDefaults_1.CSSDefaults, FlexContainer_1.FlexContainer],
            pipes: [pipes_1.PropsToSelectors]
        }), 
        __metadata('design:paramtypes', [FlexContainer_1.FlexContainer])
    ], FlexContainerCmp);
    return FlexContainerCmp;
})();
exports.FlexContainerCmp = FlexContainerCmp;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZmxleENvbnRhaW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOlsiRmxleENvbnRhaW5lckNtcCIsIkZsZXhDb250YWluZXJDbXAuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHFCQUF3QixlQUFlLENBQUMsQ0FBQTtBQUN4Qyx1QkFBNkIsaUJBQWlCLENBQUMsQ0FBQTtBQUMvQyw4QkFBNEIsMkJBQTJCLENBQUMsQ0FBQTtBQUN4RCxtQ0FBMEIsc0JBQXNCLENBQUMsQ0FBQTtBQUNqRCw0QkFBd0QsZUFBZSxDQUFDLENBQUE7QUFDeEUsNEJBQTBCLHlCQUF5QixDQUFDLENBQUE7QUFDcEQsc0JBQStCLGdCQUFnQixDQUFDLENBQUE7QUFFaEQ7SUE4Q0NBLDBCQUFvQkEsYUFBNEJBO1FBQTVCQyxrQkFBYUEsR0FBYkEsYUFBYUEsQ0FBZUE7SUFBR0EsQ0FBQ0E7SUE5Q3JERDtRQUFDQSxnQkFBU0EsQ0FBQ0E7WUFDVkEsUUFBUUEsRUFBRUEsZ0JBQWdCQTtZQUMxQkEsTUFBTUEsRUFBRUEsQ0FBQ0EsUUFFUEEsQ0FBQ0E7WUFDSEEsUUFBUUEsRUFBRUEsbXFEQWlDVEE7WUFDREEsVUFBVUEsRUFBRUEsQ0FBQ0EsY0FBS0EsRUFBRUEsZ0NBQVdBLEVBQUVBLGdCQUFPQTtnQkFDdkNBLDBCQUFZQSxFQUFFQSwyQkFBYUEsRUFBRUEsMEJBQVlBLENBQUNBO1lBQzNDQSxTQUFTQSxFQUFFQSxDQUFDQSx5QkFBV0EsRUFBRUEsNkJBQWFBLENBQUNBO1lBQ3ZDQSxLQUFLQSxFQUFFQSxDQUFDQSx3QkFBZ0JBLENBQUNBO1NBQ3pCQSxDQUFDQTs7eUJBS0RBO0lBQURBLHVCQUFDQTtBQUFEQSxDQWhEQSxBQWdEQ0EsSUFBQTtBQUhZLHdCQUFnQixtQkFHNUIsQ0FBQSIsImZpbGUiOiJjb21wb25lbnRzL2ZsZXhDb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gJ2FuZ3VsYXIyL2NvcmUnO1xuaW1wb3J0IHtOZ0ZvciwgTmdTdHlsZX0gZnJvbSAnYW5ndWxhcjIvY29tbW9uJztcbmltcG9ydCB7RmxleENvbnRhaW5lcn0gZnJvbSAnLi4vc2VydmljZXMvRmxleENvbnRhaW5lcic7XG5pbXBvcnQge0ZsZXhJdGVtQ21wfSBmcm9tICcuL2ZsZXhJdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQge1RvdXJQYW5lbENtcCwgQWRtaW5QYW5lbENtcCwgQ29kZVBhbmVsQ21wfSBmcm9tICcuL1NpZGViYXJDbXBzJztcbmltcG9ydCB7Q1NTRGVmYXVsdHN9IGZyb20gJy4uL3NlcnZpY2VzL0NTU0RlZmF1bHRzJztcbmltcG9ydCB7UHJvcHNUb1NlbGVjdG9yc30gZnJvbSAnLi4vdXRpbHMvcGlwZXMnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdmbGV4LWNvbnRhaW5lcicsXG5cdHN0eWxlczogW2BcblxuICBgXSxcblx0dGVtcGxhdGU6IGBcblx0XHRcdDxkaXYgaWQ9XCJmbGV4LWNvbnRhaW5lclwiICBbbmdTdHlsZV09XCJ7XG5cdFx0ICAgICd3aWR0aCc6IGZsZXhDb250YWluZXIuc3R5bGVzLndpZHRoLFxuXHRcdCAgICAnaGVpZ2h0JzogZmxleENvbnRhaW5lci5zdHlsZXMuaGVpZ2h0LFxuXHQgICAgICAnZGlzcGxheSc6IGZsZXhDb250YWluZXIuc3R5bGVzLmRpc3BsYXksXG5cdFx0XHRcdCdmbGV4LXdyYXAnOiBmbGV4Q29udGFpbmVyLnN0eWxlcy5mbGV4V3JhcCxcblx0XHRcdFx0J2ZsZXgtZGlyZWN0aW9uJzogZmxleENvbnRhaW5lci5zdHlsZXMuZmxleERpcmVjdGlvbixcblx0XHRcdFx0J2p1c3RpZnktY29udGVudCc6IGZsZXhDb250YWluZXIuc3R5bGVzLmp1c3RpZnlDb250ZW50LFxuXHRcdFx0XHQnYWxpZ24taXRlbXMnOiBmbGV4Q29udGFpbmVyLnN0eWxlcy5hbGlnbkl0ZW1zLFxuXHRcdFx0XHQnYWxpZ24tY29udGVudCc6IGZsZXhDb250YWluZXIuc3R5bGVzLmFsaWduQ29udGVudFxuXHQgICAgfVwiIGNsYXNzPVwiZmxleC1jb250YWluZXJcIj5cblx0XHRcdFx0PGRpdiBjbGFzcz1cImNvbnRhaW5lci13aWRlLWFjdGlvbnNcIj5cblx0XHRcdFx0XHQ8c3BhbiAoY2xpY2spPSdmbGV4Q29udGFpbmVyLnJlbW92ZUFsbCgpJyB0aXRsZT0nUmVtb3ZlIGFsbCBmbGV4IGl0ZW1zJz48aSBjbGFzcz1cImZhIGZhLXRyYXNoXCI+PC9pPjwvc3Bhbj5cblx0XHRcdFx0XHQ8c3BhbiAoY2xpY2spPSdmbGV4Q29udGFpbmVyLnJlc2l6ZUNvbnRhaW5lcigpJyB0aXRsZT0nUmVzaXplIGZsZXggY29udGFpbmVyJz48aSBjbGFzcz1cImZhIGZhLWV4Y2hhbmdlXCI+PC9pPjwvc3Bhbj5cblx0XHRcdFx0XHQ8c3BhbiAoY2xpY2spPSdmbGV4Q29udGFpbmVyLnNob3dDb2RlKCknIHRpdGxlPSdWaWV3IENTUyc+PGkgY2xhc3M9XCJmYSBmYS1jb2RlXCI+PC9pPjwvc3Bhbj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDxmbGV4LWl0ZW0gY2xhc3M9XCJmbGV4LWl0ZW1cIiAqbmdGb3I9XCIjaXRlbSBvZiBmbGV4Q29udGFpbmVyLmxpc3RcIiBbaXRlbV09XCJpdGVtXCIgW25nU3R5bGVdPVwie1xuXHRcdCAgICAnd2lkdGgnOiBpdGVtLnN0eWxlcy53aWR0aCxcblx0XHQgICAgJ2hlaWdodCc6IGl0ZW0uc3R5bGVzLmhlaWdodCxcblx0XHRcdFx0J2ZsZXgtZ3Jvdyc6IGl0ZW0uc3R5bGVzLmZsZXhHcm93LFxuXHRcdFx0XHQnZmxleC1zaHJpbmsnOiBpdGVtLnN0eWxlcy5mbGV4U2hyaW5rLFxuXHRcdFx0XHQnZmxleC1vcmRlcic6IGl0ZW0uc3R5bGVzLmZsZXhPcmRlcixcblx0XHRcdFx0J2ZsZXgtYmFzaXMnOiBpdGVtLnN0eWxlcy5mbGV4QmFzaXMsXG5cdFx0XHRcdCdhbGlnbi1zZWxmJzogaXRlbS5zdHlsZXMuYWxpZ25TZWxmXG5cdCAgICB9XCI+PC9mbGV4LWl0ZW0+XG5cdFx0XHQ8L2Rpdj5cbiAgICA8YXNpZGUgY2xhc3M9XCJzaWRlYmFyXCI+XG5cdFx0XHQ8dG91ci1wYW5lbCBpZD1cIm1lc3NhZ2UtYm94XCIgY2xhc3M9XCJtZXNzYWdlLWJveFwiPjwvdG91ci1wYW5lbD5cblx0XHRcdDxhZG1pbi1wYW5lbCBjbGFzcz1cImNvbnRyb2wtcGFuZWxcIj48L2FkbWluLXBhbmVsPlxuXHRcdDwvYXNpZGU+XG5cdFx0PGRpdiBjbGFzcz0nbW9kYWwnPlxuXHRcdFx0PGNvZGUtcGFuZWwgY2xhc3M9XCJjb2RlLWJveFwiIGxpc3Q9XCJmbGV4Q29udGFpbmVyLmxpc3RcIj48L2NvZGUtcGFuZWw+XG5cdFx0PC9kaXY+XG5cdGAsXG5cdGRpcmVjdGl2ZXM6IFtOZ0ZvciwgRmxleEl0ZW1DbXAsIE5nU3R5bGUsXG5cdFx0VG91clBhbmVsQ21wLCBBZG1pblBhbmVsQ21wLCBDb2RlUGFuZWxDbXBdLFxuXHRwcm92aWRlcnM6IFtDU1NEZWZhdWx0cywgRmxleENvbnRhaW5lcl0sXG5cdHBpcGVzOiBbUHJvcHNUb1NlbGVjdG9yc11cbn0pXG5cbmV4cG9ydCBjbGFzcyBGbGV4Q29udGFpbmVyQ21wIHtcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBmbGV4Q29udGFpbmVyOiBGbGV4Q29udGFpbmVyKSB7fVxuXG59XG5cbi8vXG4vL1x0ZnVuY3Rpb24gZ29SaWdodCAoKSB7XG4vL1x0dmFyIGN1ciA9IHBhcnNlSW50KGdldENvbXB1dGVkU3R5bGUoZWwpLmxlZnQpO1xuLy9cbi8vXHRzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbi8vXHRcdGlmIChjdXIgPCBlbmQpIHtcbi8vXHRcdFx0ZWwuc3R5bGUubGVmdCA9IGN1ciArIDQgKyAncHgnO1xuLy9cdFx0XHRnb1JpZ2h0KCk7XG4vL1x0XHR9XG4vL1x0fSwgNSk7XG4vL31cbi8vfVxuXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=