var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('angular2/core');
var common_1 = require('angular2/common');
var FlexContainer_1 = require('../services/FlexContainer');
var flexItem_component_1 = require('./flexItem.component');
var SidebarCmps_1 = require('./SidebarCmps');
var CSSDefaults_1 = require('../services/CSSDefaults');
var pipes_1 = require('../utils/pipes');
var FlexContainerCmp = (function () {
    function FlexContainerCmp(flexContainer) {
        this.flexContainer = flexContainer;
    }
    FlexContainerCmp = __decorate([
        core_1.Component({
            selector: 'flex-container',
            styles: ["\n\n  "],
            template: "\n\t\t\t<div id=\"flex-container\"  [ngStyle]=\"{\n\t\t    'width': flexContainer.styles.width,\n\t\t    'height': flexContainer.styles.height,\n\t      'display': flexContainer.styles.display,\n\t\t\t\t'flex-wrap': flexContainer.styles.flexWrap,\n\t\t\t\t'flex-direction': flexContainer.styles.flexDirection,\n\t\t\t\t'justify-content': flexContainer.styles.justifyContent,\n\t\t\t\t'align-items': flexContainer.styles.alignItems,\n\t\t\t\t'align-content': flexContainer.styles.alignContent\n\t    }\" class=\"flex-container\">\n\t\t\t\t<flex-item class=\"flex-item\" *ngFor=\"#item of flexContainer.list\" [item]=\"item\" [ngStyle]=\"{\n\t\t    'width': item.styles.width,\n\t\t    'height': item.styles.height,\n\t\t\t\t'flex-grow': item.styles.flexGrow,\n\t\t\t\t'flex-shrink': item.styles.flexShrink,\n\t\t\t\t'flex-order': item.styles.flexOrder,\n\t\t\t\t'flex-basis': item.styles.flexBasis,\n\t\t\t\t'align-self': item.styles.alignSelf\n\t    }\"></flex-item>\n\t\t\t</div>\n    <aside class=\"sidebar\">\n\t\t\t<tour-panel id=\"message-box\" class=\"message-box\"></tour-panel>\n\t\t\t<admin-panel class=\"control-panel\"></admin-panel>\n\t\t\t<!--<code-panel class=\"code-box\" list=\"flexContainer.list\"></code-panel>-->\n\t\t</aside>\n\t",
            directives: [common_1.NgFor, flexItem_component_1.FlexItemCmp, common_1.NgStyle,
                SidebarCmps_1.TourPanelCmp, SidebarCmps_1.AdminPanelCmp, SidebarCmps_1.CodePanelCmp],
            providers: [CSSDefaults_1.CSSDefaults, FlexContainer_1.FlexContainer],
            pipes: [pipes_1.PropsToSelectors]
        }), 
        __metadata('design:paramtypes', [FlexContainer_1.FlexContainer])
    ], FlexContainerCmp);
    return FlexContainerCmp;
})();
exports.FlexContainerCmp = FlexContainerCmp;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvZmxleENvbnRhaW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOlsiRmxleENvbnRhaW5lckNtcCIsIkZsZXhDb250YWluZXJDbXAuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHFCQUF3QixlQUFlLENBQUMsQ0FBQTtBQUN4Qyx1QkFBNkIsaUJBQWlCLENBQUMsQ0FBQTtBQUMvQyw4QkFBNEIsMkJBQTJCLENBQUMsQ0FBQTtBQUN4RCxtQ0FBMEIsc0JBQXNCLENBQUMsQ0FBQTtBQUNqRCw0QkFBd0QsZUFBZSxDQUFDLENBQUE7QUFFeEUsNEJBQTBCLHlCQUF5QixDQUFDLENBQUE7QUFFcEQsc0JBQStCLGdCQUFnQixDQUFDLENBQUE7QUFFaEQ7SUF1Q0NBLDBCQUFvQkEsYUFBNEJBO1FBQTVCQyxrQkFBYUEsR0FBYkEsYUFBYUEsQ0FBZUE7SUFBR0EsQ0FBQ0E7SUF2Q3JERDtRQUFDQSxnQkFBU0EsQ0FBQ0E7WUFDVkEsUUFBUUEsRUFBRUEsZ0JBQWdCQTtZQUMxQkEsTUFBTUEsRUFBRUEsQ0FBQ0EsUUFFUEEsQ0FBQ0E7WUFDSEEsUUFBUUEsRUFBRUEsbXVDQTBCVEE7WUFDREEsVUFBVUEsRUFBRUEsQ0FBQ0EsY0FBS0EsRUFBRUEsZ0NBQVdBLEVBQUVBLGdCQUFPQTtnQkFDdkNBLDBCQUFZQSxFQUFFQSwyQkFBYUEsRUFBRUEsMEJBQVlBLENBQUNBO1lBQzNDQSxTQUFTQSxFQUFFQSxDQUFDQSx5QkFBV0EsRUFBRUEsNkJBQWFBLENBQUNBO1lBQ3ZDQSxLQUFLQSxFQUFFQSxDQUFDQSx3QkFBZ0JBLENBQUNBO1NBQ3pCQSxDQUFDQTs7eUJBS0RBO0lBQURBLHVCQUFDQTtBQUFEQSxDQXpDQSxBQXlDQ0EsSUFBQTtBQUhZLHdCQUFnQixtQkFHNUIsQ0FBQSIsImZpbGUiOiJjb21wb25lbnRzL2ZsZXhDb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gJ2FuZ3VsYXIyL2NvcmUnO1xuaW1wb3J0IHtOZ0ZvciwgTmdTdHlsZX0gZnJvbSAnYW5ndWxhcjIvY29tbW9uJztcbmltcG9ydCB7RmxleENvbnRhaW5lcn0gZnJvbSAnLi4vc2VydmljZXMvRmxleENvbnRhaW5lcic7XG5pbXBvcnQge0ZsZXhJdGVtQ21wfSBmcm9tICcuL2ZsZXhJdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQge1RvdXJQYW5lbENtcCwgQWRtaW5QYW5lbENtcCwgQ29kZVBhbmVsQ21wfSBmcm9tICcuL1NpZGViYXJDbXBzJztcbmltcG9ydCB7RmxleEl0ZW19IGZyb20gJy4uL21vZGVscy9GbGV4SXRlbSc7XG5pbXBvcnQge0NTU0RlZmF1bHRzfSBmcm9tICcuLi9zZXJ2aWNlcy9DU1NEZWZhdWx0cyc7XG5pbXBvcnQge0xvY2FsfSBmcm9tICcuLi9zZXJ2aWNlcy9Mb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHtQcm9wc1RvU2VsZWN0b3JzfSBmcm9tICcuLi91dGlscy9waXBlcyc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2ZsZXgtY29udGFpbmVyJyxcblx0c3R5bGVzOiBbYFxuXG4gIGBdLFxuXHR0ZW1wbGF0ZTogYFxuXHRcdFx0PGRpdiBpZD1cImZsZXgtY29udGFpbmVyXCIgIFtuZ1N0eWxlXT1cIntcblx0XHQgICAgJ3dpZHRoJzogZmxleENvbnRhaW5lci5zdHlsZXMud2lkdGgsXG5cdFx0ICAgICdoZWlnaHQnOiBmbGV4Q29udGFpbmVyLnN0eWxlcy5oZWlnaHQsXG5cdCAgICAgICdkaXNwbGF5JzogZmxleENvbnRhaW5lci5zdHlsZXMuZGlzcGxheSxcblx0XHRcdFx0J2ZsZXgtd3JhcCc6IGZsZXhDb250YWluZXIuc3R5bGVzLmZsZXhXcmFwLFxuXHRcdFx0XHQnZmxleC1kaXJlY3Rpb24nOiBmbGV4Q29udGFpbmVyLnN0eWxlcy5mbGV4RGlyZWN0aW9uLFxuXHRcdFx0XHQnanVzdGlmeS1jb250ZW50JzogZmxleENvbnRhaW5lci5zdHlsZXMuanVzdGlmeUNvbnRlbnQsXG5cdFx0XHRcdCdhbGlnbi1pdGVtcyc6IGZsZXhDb250YWluZXIuc3R5bGVzLmFsaWduSXRlbXMsXG5cdFx0XHRcdCdhbGlnbi1jb250ZW50JzogZmxleENvbnRhaW5lci5zdHlsZXMuYWxpZ25Db250ZW50XG5cdCAgICB9XCIgY2xhc3M9XCJmbGV4LWNvbnRhaW5lclwiPlxuXHRcdFx0XHQ8ZmxleC1pdGVtIGNsYXNzPVwiZmxleC1pdGVtXCIgKm5nRm9yPVwiI2l0ZW0gb2YgZmxleENvbnRhaW5lci5saXN0XCIgW2l0ZW1dPVwiaXRlbVwiIFtuZ1N0eWxlXT1cIntcblx0XHQgICAgJ3dpZHRoJzogaXRlbS5zdHlsZXMud2lkdGgsXG5cdFx0ICAgICdoZWlnaHQnOiBpdGVtLnN0eWxlcy5oZWlnaHQsXG5cdFx0XHRcdCdmbGV4LWdyb3cnOiBpdGVtLnN0eWxlcy5mbGV4R3Jvdyxcblx0XHRcdFx0J2ZsZXgtc2hyaW5rJzogaXRlbS5zdHlsZXMuZmxleFNocmluayxcblx0XHRcdFx0J2ZsZXgtb3JkZXInOiBpdGVtLnN0eWxlcy5mbGV4T3JkZXIsXG5cdFx0XHRcdCdmbGV4LWJhc2lzJzogaXRlbS5zdHlsZXMuZmxleEJhc2lzLFxuXHRcdFx0XHQnYWxpZ24tc2VsZic6IGl0ZW0uc3R5bGVzLmFsaWduU2VsZlxuXHQgICAgfVwiPjwvZmxleC1pdGVtPlxuXHRcdFx0PC9kaXY+XG4gICAgPGFzaWRlIGNsYXNzPVwic2lkZWJhclwiPlxuXHRcdFx0PHRvdXItcGFuZWwgaWQ9XCJtZXNzYWdlLWJveFwiIGNsYXNzPVwibWVzc2FnZS1ib3hcIj48L3RvdXItcGFuZWw+XG5cdFx0XHQ8YWRtaW4tcGFuZWwgY2xhc3M9XCJjb250cm9sLXBhbmVsXCI+PC9hZG1pbi1wYW5lbD5cblx0XHRcdDwhLS08Y29kZS1wYW5lbCBjbGFzcz1cImNvZGUtYm94XCIgbGlzdD1cImZsZXhDb250YWluZXIubGlzdFwiPjwvY29kZS1wYW5lbD4tLT5cblx0XHQ8L2FzaWRlPlxuXHRgLFxuXHRkaXJlY3RpdmVzOiBbTmdGb3IsIEZsZXhJdGVtQ21wLCBOZ1N0eWxlLFxuXHRcdFRvdXJQYW5lbENtcCwgQWRtaW5QYW5lbENtcCwgQ29kZVBhbmVsQ21wXSxcblx0cHJvdmlkZXJzOiBbQ1NTRGVmYXVsdHMsIEZsZXhDb250YWluZXJdLFxuXHRwaXBlczogW1Byb3BzVG9TZWxlY3RvcnNdXG59KVxuXG5leHBvcnQgY2xhc3MgRmxleENvbnRhaW5lckNtcCB7XG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgZmxleENvbnRhaW5lcjogRmxleENvbnRhaW5lcikge31cblxufVxuXG4vL1xuLy9cdGZ1bmN0aW9uIGdvUmlnaHQgKCkge1xuLy9cdHZhciBjdXIgPSBwYXJzZUludChnZXRDb21wdXRlZFN0eWxlKGVsKS5sZWZ0KTtcbi8vXG4vL1x0c2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4vL1x0XHRpZiAoY3VyIDwgZW5kKSB7XG4vL1x0XHRcdGVsLnN0eWxlLmxlZnQgPSBjdXIgKyA0ICsgJ3B4Jztcbi8vXHRcdFx0Z29SaWdodCgpO1xuLy9cdFx0fVxuLy9cdH0sIDUpO1xuLy99XG4vL30iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=